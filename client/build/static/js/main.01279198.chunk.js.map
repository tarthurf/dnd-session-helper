{"version":3,"sources":["utils/helpers.js","utils/switchHelpers.js","utils/UserContext.js","utils/API.js","utils/useForm.js","components/characterForms/SimpleBuild.js","components/CreateCharacter.js","components/characterViews/CharacterCard.js","components/characterViews/UserCard.js","components/CharacterPool.js","components/nav/CharacterEdit.js","components/nav/Navbar.js","components/GmView.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","formatString","string","newString","charAt","toUpperCase","slice","replace","trim","abilityBonusCalc","ability","Math","floor","SubraceSwitch","race","ClassSkillsSwitch","charClass","ClassSkillTotalSwitch","RaceLanguageSwitch","BackgroundLanguageSwitch","background","BackgroundSkillSwitch","UserContext","React","createContext","API","obj","axios","post","then","response","console","log","catch","error","get","name","concat","id","put","err","useForm","initialValues","callback","_useState","useState","_useState2","Object","slicedToArray","values","setValues","handleChange","event","persist","objectSpread","defineProperty","target","value","handleSubmit","preventDefault","require","SimpleBuild","props","state","setState","_useForm","subrace","class","level","maxHP","currentHP","str","dex","con","int","wis","cha","armor","shield","maxDex","perception","proficiency","AC","skills","trained","proficiencyBonus","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","required","map","i","key","min","max","CreateCharacter","Fragment","characterForms_SimpleBuild","onClick","CharacterCard","character","ACarmor","ACmax","ACshield","ACmiscBonus","UserCard","socket","userCharacter","useContext","hpState","sethpState","useEffect","size","e","emit","_id","CharacterPool","activeCharacters","setActiveCharacters","on","data","characterViews_UserCard","char","characterViews_CharacterCard","CharacterEdit","checkboxes","document","getElementsByName","Array","prototype","call","filter","ch","checked","forEach","box","entries","skill","defaultValue","formDataCapture","stat","parseInt","window","location","reload","alignment","step","speed","defaultChecked","Navbar","modalState","setModalState","nav_CharacterEdit","GmView","io","App","createCharacterState","setCreateCharacterState","_useState3","_useState4","characters","setCharacters","_useState5","_useState6","characterSelect","setCharacterSelect","_useState7","ACmaxDex","_useState8","setUserCharacter","charactersArr","utils_UserContext","Provider","nav_Navbar","components_CreateCharacter","components_GmView","components_CharacterPool","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.01279198.chunk.js","sourcesContent":["module.exports = {\r\n  formatString: string => {\r\n    if (typeof string === \"string\") {\r\n      let newString = string.charAt(0).toUpperCase() + string.slice(1);\r\n      newString = newString.replace(/([A-Z])/g, ' $1').trim();\r\n      return newString;\r\n    }\r\n    else return;\r\n  },\r\n\r\n  abilityBonusCalc : ability => {\r\n    return Math.floor((ability - 10) / 2)\r\n  },\r\n} ","/* eslint-disable */\r\n\r\nmodule.exports = {\r\n  SubraceSwitch: (race) => {\r\n    switch (race) {\r\n      case \"dragonborn\":\r\n        return [\"Dragonborn (Black)\", \"Dragonborn (Blue)\", \"Dragonborn (Brass)\", \"Dragonborn (Bronze)\", \"Dragonborn (Copper)\", \"Dragonborn (Gold)\", \"Dragonborn (Green)\", \"Dragonborn (Red)\", \"Dragonborn (Silver)\", \"Dragonborn (White)\",];\r\n        break;\r\n      case \"dwarf\":\r\n        return [\"none\", \"hillDwarf\", \"mountainDwarf\"];\r\n        break;\r\n      case \"elf\":\r\n        return [\"none\", \"highElf\", \"woodElf\"];\r\n        break;\r\n      case \"gnome\":\r\n        return [\"none\", \"rockGnome\", \"forestGnome\"];\r\n        break;\r\n      case \"half-elf\":\r\n        return [\"none\"];\r\n        break;\r\n      case \"halfling\":\r\n        return [\"none\", \"lightfootHalfling\", \"stoutHalfling\"];\r\n        break;\r\n      case \"half-orc\":\r\n        return [\"none\"];\r\n        break;\r\n      case \"human\":\r\n        return [\"none\"];\r\n        break;\r\n      case \"tiefling\":\r\n        return [\"none\"];\r\n        break;\r\n      default:\r\n        return [\"none\"];\r\n    }\r\n  },\r\n\r\n  ClassSkillsSwitch: (charClass) => {\r\n    switch (charClass) {\r\n      case \"barbarian\":\r\n        return [\"animalHandling\", \"athletics\", \"intimidation\", \"nature\", \"perception\", \"survival\"]\r\n        break;\r\n      case \"bard\":\r\n        return [\"acrobatics\", \"animalHandling\", \"arcana\", \"athletics\", \"deception\", \"history\", \"insight\", \"intimidation\", \"investigation\", \"medicine\", \"nature\", \"perception\", \"performance\", \"persuasion\", \"religion\", \"sleightOfHand\", \"stealth\", \"survival\"]\r\n        break;\r\n      case \"cleric\":\r\n        return [\"history\", \"insight\", \"medicine\", \"persuasion\", \"religion\"]\r\n        break;\r\n      case \"druid\":\r\n        return [\"arcana\", \"animalHandling\", \"insight\", \"medicine\", \"nature\", \"perception\", \"religion\", \"survival\"]\r\n        break;\r\n      case \"fighter\":\r\n        return [\"acrobatics\", \"animalHandling\", \"athletics\", \"history\", \"insight\", \"intimidation\", \"perception\", \"survival\"]\r\n        break;\r\n      case \"monk\":\r\n        return [\"acrobatics\", \"athletics\", \"history\", \"insight\", \"religion\", \"stealth\"]\r\n        break;\r\n      case \"paladin\":\r\n        return [\"athletics\", \"insight\", \"intimidation\", \"medicine\", \"pesuasion\", \"religion\"]\r\n        break;\r\n      case \"ranger\":\r\n        return [\"animalHandling\", \"athletics\", \"insight\", \"investigation\", \"nature\", \"perception\", \"stealth\", \"survival\"]\r\n        break;\r\n      case \"rogue\":\r\n        return [\"acrobatics\", \"athletics\", \"deception\", \"insight\", \"intimidation\", \"investigation\", \"perception\", \"performance\", \"persuasion\", \"sleightOfHand\", \"stealth\"]\r\n        break;\r\n      case \"sorcerer\":\r\n        return [\"arcana\", \"deception\", \"insight\", \"intimidation\", \"persuasion\", \"religion\"]\r\n        break;\r\n      case \"warlock\":\r\n        return [\"arcana\", \"deception\", \"history\", \"intimidation\", \"investigation\", \"nature\", \"religion\"]\r\n        break;\r\n      case \"wizard\":\r\n        return [\"arcana\", \"history\", \"insight\", \"investigation\", \"medicine\", \"religion\"]\r\n        break;\r\n    }\r\n  },\r\n\r\n  ClassSkillTotalSwitch: (charClass) => {\r\n    switch (charClass) {\r\n      case \"barbarian\":\r\n        return 2\r\n        break;\r\n      case \"bard\":\r\n        return 3\r\n        break;\r\n      case \"cleric\":\r\n        return 2\r\n        break;\r\n      case \"druid\":\r\n        return 2\r\n        break;\r\n      case \"fighter\":\r\n        return 2\r\n        break;\r\n      case \"monk\":\r\n        return 2\r\n        break;\r\n      case \"paladin\":\r\n        return 2\r\n        break;\r\n      case \"ranger\":\r\n        return 3\r\n        break;\r\n      case \"rogue\":\r\n        return 4\r\n        break;\r\n      case \"sorcerer\":\r\n        return 2\r\n        break;\r\n      case \"warlock\":\r\n        return 2\r\n        break;\r\n      case \"wizard\":\r\n        return 2\r\n        break;\r\n    }\r\n  },\r\n\r\n  RaceLanguageSwitch: race => {\r\n    switch (race) {\r\n      case \"dragonborn\":\r\n        return [\"common\", \"draconic\"];\r\n        break;\r\n      case \"dwarf\":\r\n        return [\"common\", \"dwarvish\"];\r\n        break;\r\n      case \"elf\":\r\n        return [\"common\", \"elvish\"];\r\n        break;\r\n      case \"gnome\":\r\n        return [\"common\", \"gnomish\"];\r\n        break;\r\n      case \"half-elf\":\r\n        return [\"common\", \"elvish\", 1];\r\n        break;\r\n      case \"halfling\":\r\n        return [\"common\", \"halfling\"];\r\n        break;\r\n      case \"half-orc\":\r\n        return [\"common\", \"orc\"];\r\n        break;\r\n      case \"human\":\r\n        return [\"common\", 1];\r\n        break;\r\n      case \"tiefling\":\r\n        return [\"common\", \"infernal\"];\r\n        break;\r\n      default:\r\n        return [\"common\"];\r\n    }\r\n  },\r\n\r\n  BackgroundLanguageSwitch: background => {\r\n    switch (background) {\r\n      case \"acolyte\" || \"sage\":\r\n        return 2\r\n        break;\r\n      case \"guildArtisan\" || \"guildMerchant\" || \"hermit\" || \"knight\" || \"noble\" || \"outlander\":\r\n        return 1\r\n        break;\r\n      default:\r\n        return 0\r\n    }\r\n  },\r\n\r\n  BackgroundSkillSwitch: background => {\r\n    switch (background) {\r\n      case \"acolyte\":\r\n        return [\"insight\", \"religion\"]\r\n        break;\r\n      case \"charlatan\":\r\n        return [\"deception\", \"sleightOfHand\"]\r\n        break;\r\n      case \"criminal\":\r\n        return [\"deception\", \"stealth\"]\r\n        break;\r\n      case \"entertainer\":\r\n        return [\"acrobatics\", \"performance\"]\r\n        break;\r\n      case \"folkHero\":\r\n        return [\"animalHandling\", \"survival\"]\r\n        break;\r\n      case \"gladiator\":\r\n        return [\"acrobatics\", \"performance\"]\r\n        break;\r\n      case \"guildArtisan\":\r\n        return [\"insight\", \"persuasion\"]\r\n        break;\r\n      case \"guildMerchant\":\r\n        return [\"insight\", \"persuasion\"]\r\n        break;\r\n      case \"hermit\":\r\n        return [\"medicine\", \"religion\"]\r\n        break;\r\n      case \"knight\":\r\n        return [\"history\", \"persuasion\"]\r\n        break;\r\n      case \"noble\":\r\n        return [\"history\", \"persuasion\"]\r\n        break;\r\n      case \"outlander\":\r\n        return [\"athletics\", \"survival\"]\r\n        break;\r\n      case \"pirate\":\r\n        return [\"athletics\", \"perception\"]\r\n        break;\r\n      case \"sage\":\r\n        return [\"arcana\", \"history\"]\r\n        break;\r\n      case \"sailor\":\r\n        return [\"athletics\", \"perception\"]\r\n        break;\r\n      case \"soldier\":\r\n        return [\"athletics\", \"intimidation\"]\r\n        break;\r\n      case \"spy\":\r\n        return [\"deception\", \"stealth\"]\r\n        break;\r\n      case \"urchin\":\r\n        return [\"sleightOfHand\", \"stealth\"]\r\n        break;\r\n    }\r\n  },\r\n\r\n}","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({});\r\n\r\nexport default UserContext;","import axios from 'axios';\n// import { response } from 'express';\n\nexport default {\n\n  // User Routes\n  createUser: (obj) => {\n    axios.post('/api/user', obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(error => console.log(error))\n  },\n\n  getAllUsers: () => {\n    return axios.get('/api/user/all');\n  },\n\n  getUserByName: (name) => {\n    return axios.get(`/api/user/${name}`);\n  },\n\n  // Character routes\n  createCharacter: (obj) => {\n    axios.post('/api/character', obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(error => console.log(error))\n  },\n  \n  getAllCharacters: () => {\n    return axios.get('/api/character/all');\n  },\n\n  getCharacterByName: (name) => {\n    return axios.get(`/api/character/${name}`);\n  },\n\n  updateCharacterById: (id, obj) => {\n    axios\n    .put(`/api/character/update/${id}`, obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(err => console.log(err));\n  },\n  \n  deleteCharacterByName: (name) => {\n    return axios.get(`/api/character/delete/${name}`);\n  },\n}","import { useState } from 'react';\r\n\r\nconst useForm = (initialValues, callback) => {\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      callback()\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value}));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  }\r\n};\r\n\r\nexport default useForm;","import React from 'react';\r\nimport useForm from '../../utils/useForm';\r\nimport API from '../../utils/API';\r\nconst { SubraceSwitch } = require('../../utils/switchHelpers.js')\r\n\r\nconst SimpleBuild = props => {\r\n\r\n  let state = props.state;\r\n  const setState = props.setState;\r\n\r\n  const characterSubmit = () => {\r\n    API.createCharacter(\r\n      {\r\n        name: values.name,\r\n        race: values.race,\r\n        subrace: values.subrace,\r\n        class: values.class,\r\n        level: values.level,\r\n        maxHP: values.maxHP,\r\n        currentHP: values.maxHP,\r\n        str: values.str,\r\n        dex: values.dex,\r\n        con: values.con,\r\n        int: values.int,\r\n        wis: values.wis,\r\n        cha: values.cha,\r\n        AC: {\r\n          armor: values.armor,\r\n          shield: values.shield,\r\n          maxDex: values.maxDex\r\n        },\r\n        skills: {\r\n          perception: {\r\n            trained: values.perception\r\n          }\r\n        },\r\n        proficiencyBonus: values.proficiency\r\n      }\r\n    )\r\n    setState(!state)\r\n  }\r\n\r\n  const { values, handleSubmit, handleChange } = useForm(\r\n    {\r\n      name: \"\",\r\n      race: \"dragonborn\",\r\n      subrace: \"\",\r\n      class: \"Barbarian\",\r\n      level: 1,\r\n      maxHP: 0,\r\n      currentHP: 0,\r\n      str: 10,\r\n      dex: 10,\r\n      con: 10,\r\n      int: 10,\r\n      wis: 10,\r\n      cha: 10,\r\n      armor: 10,\r\n      shield: 0,\r\n      maxDex: 0,\r\n      perception: false,\r\n      proficiency: 0,\r\n    },\r\n    characterSubmit\r\n  )\r\n\r\n  return (\r\n    <form className='flex flex-col items-center gap-y-2'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label>\r\n        What is your character's name?\r\n      </label>\r\n      <input\r\n        name=\"name\"\r\n        type=\"text\"\r\n        placeholder=\"Enter name\"\r\n        onChange={handleChange}\r\n        value={values.name}\r\n        required\r\n      />\r\n\r\n      <label>\r\n        What is your character's race?\r\n      </label>\r\n      <select\r\n        name=\"race\"\r\n        onChange={handleChange}\r\n        value={values.race}\r\n        required\r\n      >\r\n        <option value=\"dragonborn\">Dragonborn</option>\r\n        <option value=\"dwarf\">Dwarf</option>\r\n        <option value=\"elf\">Elf</option>\r\n        <option value=\"gnome\">Gnome</option>\r\n        <option value=\"half-elf\">Half-Elf</option>\r\n        <option value=\"halfling\">Halfling</option>\r\n        <option value=\"half-orc\">Half-Orc</option>\r\n        <option value=\"human\">Human</option>\r\n        <option value=\"tiefling\">Tiefling</option>\r\n      </select>\r\n\r\n      <label>\r\n        If applicable, What is your character's subrace?\r\n      </label>\r\n      <select\r\n        name=\"subrace\"\r\n        onChange={handleChange}\r\n        value={values.subrace}\r\n      >\r\n        {SubraceSwitch(values.race).map((subrace, i) => (\r\n          <option key={i} value={subrace}>{subrace.charAt(0).toUpperCase() + subrace.slice(1)}</option>\r\n        ))}\r\n\r\n      </select>\r\n\r\n      <label>\r\n        What is your character's class?\r\n      </label>\r\n      <select\r\n        name=\"class\"\r\n        onChange={handleChange}\r\n        value={values.class}\r\n        required\r\n      >\r\n        <option value=\"barbarian\">Barbarian</option>\r\n        <option value=\"bard\">Bard</option>\r\n        <option value=\"cleric\">Cleric</option>\r\n        <option value=\"druid\">Druid</option>\r\n        <option value=\"fighter\">Fighter</option>\r\n        <option value=\"monk\">Monk</option>\r\n        <option value=\"paladin\">Paladin</option>\r\n        <option value=\"ranger\">Ranger</option>\r\n        <option value=\"rogue\">Rogue</option>\r\n        <option value=\"sorcerer\">Sorcerer</option>\r\n        <option value=\"warlock\">Warlock</option>\r\n        <option value=\"wizard\">Wizard</option>\r\n      </select>\r\n\r\n      <label>\r\n        What is your character's level?\r\n      </label>\r\n      <input\r\n        name=\"level\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.level}\r\n        min={1}\r\n        max={20}\r\n        required\r\n      />\r\n\r\n      <label>\r\n        What is your character's max HP?\r\n      </label>\r\n      <input\r\n        name=\"maxHP\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.maxHP}\r\n        required\r\n      />\r\n\r\n      <label>\r\n        Set your ability Scores (include racial adjustments)\r\n      </label>\r\n      <p>Strength</p>\r\n      <input\r\n        name=\"str\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.str}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n      <p>Dexterity</p>\r\n      <input\r\n        name=\"dex\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.dex}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n      <p>Constitution</p>\r\n      <input\r\n        name=\"con\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.con}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n      <p>Intelligence</p>\r\n      <input\r\n        name=\"int\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.int}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n      <p>Wisdom</p>\r\n      <input\r\n        name=\"wis\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.wis}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n      <p>Charisma</p>\r\n      <input\r\n        name=\"cha\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.cha}\r\n        min={6}\r\n        max={18}\r\n        required\r\n      ></input>\r\n\r\n      <label>What is your proficiency bonus?</label>\r\n      <input\r\n        name=\"proficiency\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.proficiency}\r\n        min={0}\r\n      ></input>\r\n\r\n      <label>What is your armor bonus (No armor = 10)</label>\r\n      <input\r\n        name=\"armor\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.armor}\r\n        min={10}\r\n      ></input>\r\n\r\n      <label>What is your shield bonus</label>\r\n      <input\r\n        name=\"shield\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.shield}\r\n      ></input>\r\n\r\n      <label>What is your max dexterity for your armor?</label>\r\n      <input\r\n          name=\"maxDex\"\r\n          type=\"number\"\r\n          onChange={handleChange}\r\n          value={values.maxDex}\r\n      ></input>\r\n\r\n      <label>Is your character proficient in Perception?</label>\r\n      <select\r\n        name=\"perception\"\r\n        onChange={handleChange}\r\n        value={values.perception}\r\n        required\r\n      >\r\n        <option value={false}>No</option>\r\n        <option value={true}>Yes</option>\r\n      </select>\r\n\r\n      <button className='border border-black m-2'\r\n        type=\"submit\"\r\n      >\r\n        Create character\r\n        </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SimpleBuild;","import React from 'react';\nimport SimpleBuild from './characterForms/SimpleBuild';\n\nconst CreateCharacter = props => {\n\n  let state = props.state;\n  const setState = props.setState;\n\n  return(\n    <React.Fragment>\n      <SimpleBuild state={state} setState={setState} />\n    <button className='border border-black m-2'\n      onClick={()=> setState(!state)}\n    >\n      Choose a Character\n    </button>\n    </React.Fragment>\n  )\n}\n\nexport default CreateCharacter;","import React from 'react';\nimport { abilityBonusCalc, formatString } from '../../utils/helpers';\n\nconst CharacterCard = props => {\n\n  const character = props.character;\n\n  const maxDex = () => {\n    const dex = abilityBonusCalc(character.dex)\n    const maxDex = character.ACmax\n    if (maxDex !== 0 && dex >= maxDex) return maxDex;\n    else return dex;\n  }\n\n  return (\n    <div className='flex flex-col justufy-center w-3/4 border border-black text-2xl'>\n      <div className='flex justify-around items-center'>\n        <h1>{character.name}</h1>\n        {character.subrace === \"\" ?\n          <p>{formatString(character.race)}</p>\n          :\n          <p>{formatString(character.subrace)}</p>\n        }\n        <p>{formatString(character.class)} {character.level}</p>\n      </div>\n      <div className='flex justify-center'>\n        <p>HP: {character.currentHP}</p>\n        <p>/ {character.maxHP}</p>\n      </div>\n      <div className='flex justify-around'>\n        <p>AC: {character.ACarmor + maxDex() + character.ACshield + character.ACmiscBonus}</p>\n        <p>Initiative: {abilityBonusCalc(character.dex)}</p>\n        <p>Perception: {\n          character.skills.perception.trained === true ?\n            10 + character.proficiencyBonus + abilityBonusCalc(character.wis)\n            :\n            10 + abilityBonusCalc(character.wis)\n        }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from '../../utils/UserContext';\nimport { abilityBonusCalc, formatString } from '../../utils/helpers';\nimport API from '../../utils/API'\n\nconst UserCard = props => {\n\n  const socket = props.socket\n\n  const maxDex = () => {\n    const dex = abilityBonusCalc(userCharacter.dex)\n    const maxDex = userCharacter.ACmax\n    if (maxDex !== 0 && dex >= maxDex) return maxDex;\n    else return dex;\n  }\n\n  const { userCharacter } = useContext(UserContext);\n\n  const [ hpState, sethpState ] = useState(userCharacter.currentHP)\n\n  const name = userCharacter.name;\n\n  const handleHP = e => {\n    sethpState(e.target.value);\n    console.log(hpState)\n  };\n\n  useEffect(() => {\n  },[socket])\n\n  return(\n    <div className='flex flex-col justufy-center w-3/4 border border-black text-2xl'>\n      <div className='flex justify-around items-center'>\n        <h1>{userCharacter.name}</h1>\n        {userCharacter.subrace === \"\" ?\n        <p>{formatString(userCharacter.race)}</p>\n        :\n        <p>{formatString(userCharacter.subrace)}</p>\n        }\n        <p>{formatString(userCharacter.class)} {userCharacter.level}</p>\n      </div>\n      <div className='flex justify-center'>\n        <p>HP: </p>\n        <input className='w-16'\n          type=\"number\"\n          size=\"3\"\n          max={userCharacter.maxHP}\n          value={hpState} \n          onChange={handleHP}\n        >\n        </input>\n        <p>/ {userCharacter.maxHP}</p>\n        <button className='border border-black ml-2 px-1'\n          onClick={() => {\n          socket.emit('update-hp', {hpState, name});\n          API.updateCharacterById(userCharacter._id, {currentHP: hpState});\n          }}>\n          Set HP \n        </button>\n      </div>\n      <div className='flex justify-around'>\n        <p>AC: {userCharacter.ACarmor + maxDex() + userCharacter.ACshield + userCharacter.ACmiscBonus}</p>\n        <p>Initiative: {abilityBonusCalc(userCharacter.dex)}</p>\n        <p>Perception: {\n          userCharacter.skills.perception.trained === true ?\n          10 + userCharacter.proficiencyBonus + abilityBonusCalc(userCharacter.wis)\n          :\n          10 + abilityBonusCalc(userCharacter.wis)\n        }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default UserCard;","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\nimport CharacterCard from './characterViews/CharacterCard';\nimport UserCard from './characterViews/UserCard';\n\nconst CharacterPool = props => {\n\n  const socket = props.socket;\n\n  const { userCharacter } = useContext(UserContext);\n\n  const [ activeCharacters, setActiveCharacters ] = useState([]);\n\n  useEffect(() => {\n    socket.on('update-user-characters', data => {\n      // Updates player array from backend array\n      setActiveCharacters(data);\n    })\n  },[])\n\n  return(\n    <div className='flex flex-col items-center'>\n      <UserCard socket={socket} />\n      {activeCharacters.map(char => (\n        char.name === userCharacter.name ?\n        null\n        :\n        <CharacterCard character={char} key={char._id}/>\n      ))}\n\n      \n    </div>\n  )\n}\n\nexport default CharacterPool;","/* eslint-disable */\r\n\r\nimport React, { useContext } from 'react';\r\nimport { formatString } from '../../utils/helpers';\r\nimport useForm from '../../utils/useForm';\r\nimport { SubraceSwitch } from '../../utils/switchHelpers';\r\nimport API from '../../utils/API';\r\nimport UserContext from '../../utils/UserContext';\r\n\r\nconst CharacterEdit = props => {\r\n\r\n  const { userCharacter } = useContext(UserContext);\r\n\r\n  const formDataCapture = () => {\r\n    const checkboxes = document.getElementsByName(\"skills\");\r\n    const selectedCboxes = Array.prototype.slice.call(checkboxes).filter(ch => ch.checked == true);\r\n    selectedCboxes.forEach(box => {\r\n      Object.entries(values.skills).map(skill => {\r\n        if (box.defaultValue === skill[0]) skill[1].trained = true;\r\n        else skill[1].trained = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  const intConvert = obj => {\r\n    Object.entries(obj).map(stat => {\r\n      if (parseInt(stat[1])) {\r\n        stat[1] = parseInt(stat[1]);\r\n        console.log(stat[0], typeof stat[1]);\r\n      }\r\n    });\r\n  }\r\n\r\n  const updateChar = () => {\r\n    formDataCapture();\r\n    intConvert(values);\r\n    API.updateCharacterById(values._id, values);\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const { values, handleChange, handleSubmit } = useForm(userCharacter, updateChar)\r\n\r\n  return (\r\n    <form className='flex flex-col'\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <p>{values.name}</p>\r\n\r\n      <label>Race</label>\r\n      <select\r\n        name=\"race\"\r\n        onChange={handleChange}\r\n        value={values.race}\r\n        required\r\n      >\r\n        <option value=\"dragonborn\">Dragonborn</option>\r\n        <option value=\"dwarf\">Dwarf</option>\r\n        <option value=\"elf\">Elf</option>\r\n        <option value=\"gnome\">Gnome</option>\r\n        <option value=\"half-elf\">Half-Elf</option>\r\n        <option value=\"halfling\">Halfling</option>\r\n        <option value=\"half-orc\">Half-Orc</option>\r\n        <option value=\"human\">Human</option>\r\n        <option value=\"tiefling\">Tiefling</option>\r\n      </select>\r\n\r\n      <label>\r\n        If applicable, What is your character's subrace?\r\n      </label>\r\n      <select\r\n        name=\"subrace\"\r\n        onChange={handleChange}\r\n        value={values.subrace}\r\n        required\r\n      >\r\n        {SubraceSwitch(values.race).map((subrace, i) => (\r\n          <option key={i} value={subrace}>{formatString(subrace)}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <label>\r\n        What is your character's class?\r\n      </label>\r\n      <select\r\n        name=\"class\"\r\n        onChange={handleChange}\r\n        value={values.class}\r\n        required\r\n      >\r\n        <option value=\"barbarian\">Barbarian</option>\r\n        <option value=\"bard\">Bard</option>\r\n        <option value=\"cleric\">Cleric</option>\r\n        <option value=\"druid\">Druid</option>\r\n        <option value=\"fighter\">Fighter</option>\r\n        <option value=\"monk\">Monk</option>\r\n        <option value=\"paladin\">Paladin</option>\r\n        <option value=\"ranger\">Ranger</option>\r\n        <option value=\"rogue\">Rogue</option>\r\n        <option value=\"sorcerer\">Sorcerer</option>\r\n        <option value=\"warlock\">Warlock</option>\r\n        <option value=\"wizard\">Wizard</option>\r\n      </select>\r\n\r\n      <label>\r\n        What is your character's level?\r\n        </label>\r\n      <input\r\n        name=\"level\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.level}\r\n        min={1}\r\n        max={20}\r\n        required\r\n      />\r\n\r\n      <label>\r\n        What is your character's alignment?\r\n      </label>\r\n      <select\r\n        name=\"alignment\"\r\n        onChange={handleChange}\r\n        value={values.alignment}\r\n        required\r\n      >\r\n        <option value=\"lg\">Lawful Good</option>\r\n        <option value=\"ng\">Neutral Good</option>\r\n        <option value=\"cg\">Chaotic Good</option>\r\n        <option value=\"ln\">Lawfule Neutral</option>\r\n        <option value=\"n\">Neutral</option>\r\n        <option value=\"cn\">Chaotic Neutral</option>\r\n        <option value=\"le\">Lawful Evil</option>\r\n        <option value=\"ne\">Neutral Evil</option>\r\n        <option value=\"ce\">Chaotic Evil</option>\r\n      </select>\r\n\r\n      <label>\r\n        What is your character's speed?\r\n      </label>\r\n      <input\r\n        name=\"speed\"\r\n        type=\"number\"\r\n        step={5}\r\n        onChange={handleChange}\r\n        value={values.speed}\r\n        required\r\n      >\r\n      </input>\r\n\r\n      <label>\r\n        What is your character's max HP?\r\n      </label>\r\n      <input\r\n        name=\"maxHP\"\r\n        type=\"number\"\r\n        placeholder=\"Enter max HP\"\r\n        onChange={handleChange}\r\n        value={values.maxHP}\r\n        required\r\n      />\r\n      \r\n      <label>\r\n        What is your character's Proficiency Bonus?\r\n      </label>\r\n      <input\r\n        name=\"proficiencyBonus\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.proficiencyBonus}\r\n        required\r\n      />\r\n\r\n      <label>What is your base armor bonus? (10 if not wearing armor)</label>\r\n      <input\r\n        name=\"ACarmor\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.ACarmor}\r\n      />\r\n\r\n      <label>What is your armor's maximum dex? (0 if none)</label>\r\n      <input\r\n        name=\"ACmax\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.ACmax}\r\n      />\r\n\r\n      <label>What is your base shield bonus?</label>\r\n      <input\r\n        name=\"ACshield\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.ACshield}\r\n      />\r\n\r\n      <label>Does your character have any miscellaneous armor bonuses?</label>\r\n      <input\r\n        name=\"ACmiscBonus\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.ACmiscBonus}\r\n      />\r\n\r\n      <label>\r\n        Set your ability Scores (include racial adjustments)\r\n      </label>\r\n      <p>Strength</p>\r\n      <input\r\n        name=\"str\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.str}\r\n        required\r\n      >\r\n      </input>\r\n      <p>Dexterity</p>\r\n      <input\r\n        name=\"dex\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.dex}\r\n        required\r\n      >\r\n      </input>\r\n      <p>Constitution</p>\r\n      <input\r\n        name=\"con\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.con}\r\n        required\r\n      >\r\n      </input>\r\n      <p>Intelligence</p>\r\n      <input\r\n        name=\"int\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.int}\r\n        required\r\n      >\r\n      </input>\r\n      <p>Wisdom</p>\r\n      <input\r\n        name=\"wis\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.wis}\r\n        required\r\n      >\r\n      </input>\r\n      <p>Charisma</p>\r\n      <input\r\n        name=\"cha\"\r\n        type=\"number\"\r\n        onChange={handleChange}\r\n        value={values.cha}\r\n        required\r\n      >\r\n      </input>\r\n\r\n      <p>Skill Proficiencies:</p>\r\n      {Object.entries(values.skills).map((skill, i) => (\r\n        skill[1].trained === false ? (\r\n          <React.Fragment key={i+200}>\r\n            <label key={i+100}>{formatString(skill[0])}</label>\r\n            <input\r\n              key={i}\r\n              name=\"skills\"\r\n              type=\"checkbox\"\r\n              value={skill[0]}\r\n            />\r\n          </React.Fragment>\r\n        ) : (\r\n            <React.Fragment key={i+200}>\r\n              <label key={i+100}>{formatString(skill[0])}</label>\r\n              <input\r\n                key={i}\r\n                name=\"skills\"\r\n                type=\"checkbox\"\r\n                value={skill[0]}\r\n                defaultChecked\r\n              />\r\n            </React.Fragment>\r\n          )\r\n      ))}\r\n      <button className='border border-black m-2'\r\n        type=\"submit\"\r\n      >\r\n        submit\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default CharacterEdit;","import React, { useState, useContext } from 'react';\r\n// import CharacterView from './CharacterView';\r\nimport CharacterEdit from './CharacterEdit';\r\nimport UserContext from '../../utils/UserContext';\r\n// import SearchBar from './SearchBar';\r\n\r\nconst Navbar = props => {\r\n\r\n  const socket = props.socket;\r\n\r\n\r\n\r\n  const { userCharacter } = useContext(UserContext)\r\n\r\n  const [modalState, setModalState] = useState(false);\r\n\r\n  return (\r\n    <nav className=\"px-4 flex items-center flex-grow-0 flex-shrink-0 justify-between h-16 w-full bg-black text-white text-3xl md:text-2xl shadow-lg\">\r\n      {userCharacter.name === \"\" ?\r\n      null\r\n      :\r\n      <button\r\n        onClick={() => setModalState(!modalState)}\r\n      >\r\n        View Character Sheet\r\n      </button>\r\n      }\r\n      {modalState ?\r\n        <div className='flex absolute z-10 inset-0 m-16 p-8 border-gray-800 bg-gray-200 text-black'>\r\n          {userCharacter.name === \"\" ?\r\n            null\r\n            :\r\n            <CharacterEdit className='z-20' char={userCharacter} socket={socket} />\r\n          }\r\n        </div>\r\n        :\r\n        null\r\n      }\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport CharacterCard from './characterViews/CharacterCard';\r\n\r\nconst GmView = props => {\r\n\r\n  const socket = props.socket;\r\n\r\n  const [ activeCharacters, setActiveCharacters ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('update-user-characters', data => {\r\n      // Updates player array from backend array\r\n      setActiveCharacters(data);\r\n    })\r\n  },[])\r\n\r\n  return(\r\n    <div className='flex flex-col items-center'>\r\n      {activeCharacters.map(char => (\r\n        <CharacterCard character={char} key={char._id}/>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GmView;","import React, { useState, useEffect } from \"react\";\nimport UserContext from \"./utils/UserContext\";\nimport io from 'socket.io-client';\nimport API from './utils/API';\nimport CreateCharacter from \"./components/CreateCharacter\";\nimport CharacterPool from \"./components/CharacterPool\";\nimport Navbar from \"./components/nav/Navbar\";\nimport GmView from './components/GmView'\n\nconst socket = io();\n\nconst App = () => {\n\n  const [createCharacterState, setCreateCharacterState] = useState(false)\n\n  // Sets character Array for users to select from\n  const [characters, setCharacters] = useState([]);\n\n  // Handles character selection for user\n  const [characterSelect, setCharacterSelect] = useState(\"\");\n  // Handles Character selection value change\n  const handleCharacterSelection = e => {\n    setCharacterSelect(e.target.value)\n  };\n  // Takes character select state and grabs the character info from an api\n  const selectCharacter = e => {\n    e.preventDefault();\n    API.getCharacterByName(characterSelect)\n      .then(char => {\n        const character = char.data[0];\n        setUserCharacter(character);\n        socket.emit('add-user-character', character);\n      })\n      .catch(err => console.log(err))\n  }\n\n  // State for users selected character\n  const [userCharacter, setUserCharacter] = useState(\n    {\n      name: \"\",\n      race: \"\",\n      subrace: \"\",\n      class: \"\",\n      level: \"\",\n      currentHP: \"\",\n      maxHP: \"\",\n      ACarmor: 10,\n      ACshield: 0,\n      ACmaxDex: 0,\n      ACmiscBonus: 0,\n    }\n  );\n\n  const gmLogin = () => {\n    setUserCharacter({name: \"gm\"})\n  }\n\n  // Gets all created characters on page load\n  useEffect(() => {\n    API.getAllCharacters()\n      .then(characters => {\n        console.log(characters.data);\n        const charactersArr = characters.data;\n        setCharacters(charactersArr)\n      })\n  }, [])\n\n  return (\n    <UserContext.Provider value={{ userCharacter }}>\n      <div>\n        <Navbar socket={socket} />\n        {userCharacter.name === \"\" ?\n          createCharacterState === false ?\n            <div className='flex flex-col items-center'>\n              <form className='text-2xl flex flex-col items-center'\n                onSubmit={selectCharacter}\n              >\n                <p>Select a character</p>\n                <select className='border border-black'\n                  value={characterSelect}\n                  onChange={handleCharacterSelection}\n                  id=\"name\"\n                  size=\"10\"\n                >\n                  {characters.map(char => (\n                    <option\n                      key={char._id}\n                      value={char.name}\n                    >\n                      {char.name}\n                    </option>\n                  ))}\n                </select>\n                <button className='border border-black m-2'\n                  type=\"submit\"\n                >\n                  Confirm\n                </button>\n              </form>\n              <button onClick={() => gmLogin()}>\n                GM Login\n              </button>\n              <button className='border border-black m-2'\n                onClick={() => setCreateCharacterState(!createCharacterState)}\n              >\n                Create a Character\n              </button>\n            </div>\n            :\n            <CreateCharacter\n              state={createCharacterState}\n              setState={setCreateCharacterState}\n            />\n          :\n          userCharacter.name === \"gm\" ?\n            <div>\n              <GmView socket={socket} />\n            </div>\n            :\n            <div>\n              <CharacterPool socket={socket}/>\n            </div>\n          \n        }\n      </div>\n    </UserContext.Provider>\n  )\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}