{"version":3,"sources":["utils/helpers.js","utils/switchHelpers.js","utils/UserContext.js","utils/API.js","utils/useForm.js","components/characterForms/SimpleBuild.js","components/CreateCharacter.js","components/characterViews/CharacterCard.js","components/characterViews/UserCard.js","components/CharacterPool.js","components/nav/Navbar.js","components/characterViews/CharacterEdit.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","formatString","string","newString","charAt","toUpperCase","slice","replace","trim","abilityBonusCalc","ability","Math","floor","calcDex","dex","maxDex","SubraceSwitch","race","ClassSkillsSwitch","charClass","ClassSkillTotalSwitch","RaceLanguageSwitch","BackgroundLanguageSwitch","background","BackgroundSkillSwitch","UserContext","React","createContext","API","obj","axios","post","then","response","console","log","catch","error","get","name","concat","id","put","err","useForm","initialValues","callback","_useState","useState","_useState2","Object","slicedToArray","values","setValues","handleChange","event","persist","objectSpread","defineProperty","target","value","handleSubmit","preventDefault","require","SimpleBuild","props","state","setState","_useForm","subrace","class","level","maxHP","currentHP","str","con","int","wis","cha","armor","shield","maximumDexterity","acMiscBonus","proficiencyBonus","react_default","a","createElement","className","onSubmit","type","placeholder","onChange","required","map","i","key","min","max","CreateCharacter","Fragment","characterForms_SimpleBuild","onClick","CharacterCard","character","parseInt","skills","perception","trained","UserCard","socket","userCharacter","useContext","hpState","sethpState","size","e","emit","_id","CharacterPool","activeCharacters","setActiveCharacters","useEffect","on","data","characterViews_UserCard","char","characterViews_CharacterCard","Navbar","CharacterEdit","entries","item","parseFloat","setTimeout","abilityBonus","alignment","saves","save","defaultChecked","skill","step","speed","tempHP","io","App","createCharacterState","setCreateCharacterState","_useState3","_useState4","characters","setCharacters","_useState5","_useState6","characterSelect","setCharacterSelect","_useState7","ACarmor","ACshield","ACmaxDex","ACmiscBonus","_useState8","setUserCharacter","charactersArr","utils_UserContext","Provider","nav_Navbar","components_CreateCharacter","characterViews_CharacterEdit","components_CharacterPool","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.777b947d.chunk.js","sourcesContent":["module.exports = {\n  formatString: string => {\n    if (typeof string === \"string\") {\n      let newString = string.charAt(0).toUpperCase() + string.slice(1);\n      newString = newString.replace(/([A-Z])/g, ' $1').trim();\n      return newString;\n    }\n    else return;\n  },\n\n  abilityBonusCalc: ability => {\n    return Math.floor((ability - 10) / 2)\n  },\n\n  calcDex: (dex, maxDex) => {\n    if (maxDex <= -1) return 0;\n    if (maxDex === 0) return dex;\n    else if (maxDex <= dex) return maxDex;\n    else return dex;\n  },\n\n  \n} ","/* eslint-disable */\n\nmodule.exports = {\n  SubraceSwitch: (race) => {\n    switch (race) {\n      case \"dragonborn\":\n        return [\"Dragonborn (Black)\", \"Dragonborn (Blue)\", \"Dragonborn (Brass)\", \"Dragonborn (Bronze)\", \"Dragonborn (Copper)\", \"Dragonborn (Gold)\", \"Dragonborn (Green)\", \"Dragonborn (Red)\", \"Dragonborn (Silver)\", \"Dragonborn (White)\",];\n        break;\n      case \"dwarf\":\n        return [\"none\", \"hillDwarf\", \"mountainDwarf\"];\n        break;\n      case \"elf\":\n        return [\"none\", \"highElf\", \"woodElf\"];\n        break;\n      case \"gnome\":\n        return [\"none\", \"rockGnome\", \"forestGnome\"];\n        break;\n      case \"half-elf\":\n        return [\"none\"];\n        break;\n      case \"halfling\":\n        return [\"none\", \"lightfootHalfling\", \"stoutHalfling\"];\n        break;\n      case \"half-orc\":\n        return [\"none\"];\n        break;\n      case \"human\":\n        return [\"none\"];\n        break;\n      case \"tiefling\":\n        return [\"none\"];\n        break;\n      default:\n        return [\"none\"];\n    }\n  },\n\n  ClassSkillsSwitch: (charClass) => {\n    switch (charClass) {\n      case \"barbarian\":\n        return [\"animalHandling\", \"athletics\", \"intimidation\", \"nature\", \"perception\", \"survival\"]\n        break;\n      case \"bard\":\n        return [\"acrobatics\", \"animalHandling\", \"arcana\", \"athletics\", \"deception\", \"history\", \"insight\", \"intimidation\", \"investigation\", \"medicine\", \"nature\", \"perception\", \"performance\", \"persuasion\", \"religion\", \"sleightOfHand\", \"stealth\", \"survival\"]\n        break;\n      case \"cleric\":\n        return [\"history\", \"insight\", \"medicine\", \"persuasion\", \"religion\"]\n        break;\n      case \"druid\":\n        return [\"arcana\", \"animalHandling\", \"insight\", \"medicine\", \"nature\", \"perception\", \"religion\", \"survival\"]\n        break;\n      case \"fighter\":\n        return [\"acrobatics\", \"animalHandling\", \"athletics\", \"history\", \"insight\", \"intimidation\", \"perception\", \"survival\"]\n        break;\n      case \"monk\":\n        return [\"acrobatics\", \"athletics\", \"history\", \"insight\", \"religion\", \"stealth\"]\n        break;\n      case \"paladin\":\n        return [\"athletics\", \"insight\", \"intimidation\", \"medicine\", \"pesuasion\", \"religion\"]\n        break;\n      case \"ranger\":\n        return [\"animalHandling\", \"athletics\", \"insight\", \"investigation\", \"nature\", \"perception\", \"stealth\", \"survival\"]\n        break;\n      case \"rogue\":\n        return [\"acrobatics\", \"athletics\", \"deception\", \"insight\", \"intimidation\", \"investigation\", \"perception\", \"performance\", \"persuasion\", \"sleightOfHand\", \"stealth\"]\n        break;\n      case \"sorcerer\":\n        return [\"arcana\", \"deception\", \"insight\", \"intimidation\", \"persuasion\", \"religion\"]\n        break;\n      case \"warlock\":\n        return [\"arcana\", \"deception\", \"history\", \"intimidation\", \"investigation\", \"nature\", \"religion\"]\n        break;\n      case \"wizard\":\n        return [\"arcana\", \"history\", \"insight\", \"investigation\", \"medicine\", \"religion\"]\n        break;\n    }\n  },\n\n  ClassSkillTotalSwitch: (charClass) => {\n    switch (charClass) {\n      case \"barbarian\":\n        return 2\n        break;\n      case \"bard\":\n        return 3\n        break;\n      case \"cleric\":\n        return 2\n        break;\n      case \"druid\":\n        return 2\n        break;\n      case \"fighter\":\n        return 2\n        break;\n      case \"monk\":\n        return 2\n        break;\n      case \"paladin\":\n        return 2\n        break;\n      case \"ranger\":\n        return 3\n        break;\n      case \"rogue\":\n        return 4\n        break;\n      case \"sorcerer\":\n        return 2\n        break;\n      case \"warlock\":\n        return 2\n        break;\n      case \"wizard\":\n        return 2\n        break;\n    }\n  },\n\n  RaceLanguageSwitch: race => {\n    switch (race) {\n      case \"dragonborn\":\n        return [\"common\", \"draconic\"];\n        break;\n      case \"dwarf\":\n        return [\"common\", \"dwarvish\"];\n        break;\n      case \"elf\":\n        return [\"common\", \"elvish\"];\n        break;\n      case \"gnome\":\n        return [\"common\", \"gnomish\"];\n        break;\n      case \"half-elf\":\n        return [\"common\", \"elvish\", 1];\n        break;\n      case \"halfling\":\n        return [\"common\", \"halfling\"];\n        break;\n      case \"half-orc\":\n        return [\"common\", \"orc\"];\n        break;\n      case \"human\":\n        return [\"common\", 1];\n        break;\n      case \"tiefling\":\n        return [\"common\", \"infernal\"];\n        break;\n      default:\n        return [\"common\"];\n    }\n  },\n\n  BackgroundLanguageSwitch: background => {\n    switch (background) {\n      case \"acolyte\" || \"sage\":\n        return 2\n        break;\n      case \"guildArtisan\" || \"guildMerchant\" || \"hermit\" || \"knight\" || \"noble\" || \"outlander\":\n        return 1\n        break;\n      default:\n        return 0\n    }\n  },\n\n  BackgroundSkillSwitch: background => {\n    switch (background) {\n      case \"acolyte\":\n        return [\"insight\", \"religion\"]\n        break;\n      case \"charlatan\":\n        return [\"deception\", \"sleightOfHand\"]\n        break;\n      case \"criminal\":\n        return [\"deception\", \"stealth\"]\n        break;\n      case \"entertainer\":\n        return [\"acrobatics\", \"performance\"]\n        break;\n      case \"folkHero\":\n        return [\"animalHandling\", \"survival\"]\n        break;\n      case \"gladiator\":\n        return [\"acrobatics\", \"performance\"]\n        break;\n      case \"guildArtisan\":\n        return [\"insight\", \"persuasion\"]\n        break;\n      case \"guildMerchant\":\n        return [\"insight\", \"persuasion\"]\n        break;\n      case \"hermit\":\n        return [\"medicine\", \"religion\"]\n        break;\n      case \"knight\":\n        return [\"history\", \"persuasion\"]\n        break;\n      case \"noble\":\n        return [\"history\", \"persuasion\"]\n        break;\n      case \"outlander\":\n        return [\"athletics\", \"survival\"]\n        break;\n      case \"pirate\":\n        return [\"athletics\", \"perception\"]\n        break;\n      case \"sage\":\n        return [\"arcana\", \"history\"]\n        break;\n      case \"sailor\":\n        return [\"athletics\", \"perception\"]\n        break;\n      case \"soldier\":\n        return [\"athletics\", \"intimidation\"]\n        break;\n      case \"spy\":\n        return [\"deception\", \"stealth\"]\n        break;\n      case \"urchin\":\n        return [\"sleightOfHand\", \"stealth\"]\n        break;\n    }\n  },\n\n}","import React from \"react\";\r\n\r\nconst UserContext = React.createContext({});\r\n\r\nexport default UserContext;","import axios from 'axios';\n// import { response } from 'express';\n\nexport default {\n\n  // User Routes\n  createUser: (obj) => {\n    axios.post('/api/user', obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(error => console.log(error))\n  },\n\n  getAllUsers: () => {\n    return axios.get('/api/user/all');\n  },\n\n  getUserByName: (name) => {\n    return axios.get(`/api/user/${name}`);\n  },\n\n  // Character routes\n  createCharacter: (obj) => {\n    axios.post('/api/character', obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(error => console.log(error))\n  },\n  \n  getAllCharacters: () => {\n    return axios.get('/api/character/all');\n  },\n\n  getCharacterByName: (name) => {\n    return axios.get(`/api/character/${name}`);\n  },\n\n  updateCharacterById: (id, obj) => {\n    axios\n    .put(`/api/character/update/${id}`, obj)\n    .then(response => {\n      console.log(response);\n      return response;\n    })\n    .catch(err => console.log(err));\n  },\n  \n  deleteCharacterByName: (name) => {\n    return axios.get(`/api/character/delete/${name}`);\n  },\n}","import { useState } from 'react';\r\n\r\nconst useForm = (initialValues, callback) => {\r\n\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n      callback()\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n    setValues(values => ({ ...values, [event.target.name]: event.target.value}));\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values\r\n  }\r\n};\r\n\r\nexport default useForm;","import React from 'react';\nimport useForm from '../../utils/useForm';\nimport API from '../../utils/API';\nconst { SubraceSwitch } = require('../../utils/switchHelpers.js')\n\nconst SimpleBuild = props => {\n\n  let state = props.state;\n  const setState = props.setState;\n\n  const characterSubmit = () => {\n    API.createCharacter(values)\n    setState(!state)\n  }\n\n  const { values, handleSubmit, handleChange } = useForm(\n    {\n      name: \"\",\n      race: \"dragonborn\",\n      subrace: \"\",\n      class: \"Barbarian\",\n      level: 1,\n      background: \"Acolyte\",\n      maxHP: 0,\n      currentHP: 0,\n      str: 10,\n      dex: 10,\n      con: 10,\n      int: 10,\n      wis: 10,\n      cha: 10,\n      armor: 10,\n      shield: 0,\n      maximumDexterity: 0,\n      acMiscBonus: 0,\n      proficiencyBonus: 0,\n    },\n    characterSubmit\n  )\n\n  return (\n    <form className='flex flex-col items-center gap-y-2'\n      onSubmit={handleSubmit}\n    >\n      <label>\n        What is your character's name?\n      </label>\n      <input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Enter name\"\n        onChange={handleChange}\n        value={values.name}\n        required\n      />\n\n      <label>\n        What is your character's race?\n      </label>\n      <select\n        name=\"race\"\n        onChange={handleChange}\n        value={values.race}\n        required\n      >\n        <option value=\"dragonborn\">Dragonborn</option>\n        <option value=\"dwarf\">Dwarf</option>\n        <option value=\"elf\">Elf</option>\n        <option value=\"gnome\">Gnome</option>\n        <option value=\"half-elf\">Half-Elf</option>\n        <option value=\"halfling\">Halfling</option>\n        <option value=\"half-orc\">Half-Orc</option>\n        <option value=\"human\">Human</option>\n        <option value=\"tiefling\">Tiefling</option>\n      </select>\n\n      <label>\n        If applicable, What is your character's subrace?\n      </label>\n      <select\n        name=\"subrace\"\n        onChange={handleChange}\n        value={values.subrace}\n      >\n        {SubraceSwitch(values.race).map((subrace, i) => (\n          <option key={i} value={subrace}>{subrace.charAt(0).toUpperCase() + subrace.slice(1)}</option>\n        ))}\n\n      </select>\n\n      <label>\n        What is your character's class?\n      </label>\n      <select\n        name=\"class\"\n        onChange={handleChange}\n        value={values.class}\n        required\n      >\n        <option value=\"barbarian\">Barbarian</option>\n        <option value=\"bard\">Bard</option>\n        <option value=\"cleric\">Cleric</option>\n        <option value=\"druid\">Druid</option>\n        <option value=\"fighter\">Fighter</option>\n        <option value=\"monk\">Monk</option>\n        <option value=\"paladin\">Paladin</option>\n        <option value=\"ranger\">Ranger</option>\n        <option value=\"rogue\">Rogue</option>\n        <option value=\"sorcerer\">Sorcerer</option>\n        <option value=\"warlock\">Warlock</option>\n        <option value=\"wizard\">Wizard</option>\n      </select>\n\n      <label>\n        What is your character's level?\n      </label>\n      <input\n        name=\"level\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.level}\n        min={1}\n        max={20}\n        required\n      />\n\n      <label>\n        What is your character's background?\n      </label>\n      <select\n        name=\"background\"\n        onChange={handleChange}\n        value={values.background}\n        required\n      >\n        <option value=\"acolyte\">Acolyte</option>\n        <option value=\"charlatan\">Charlatan</option>\n        <option value=\"criminal\">Criminal</option>\n        <option value=\"entertainer\">Entertainer</option>\n        <option value=\"folkHero\">Folk Hero</option>\n        <option value=\"guildArtisan\">Guild Artisan</option>\n        <option value=\"guildMerchant\">Guild Merchant</option>\n        <option value=\"hermit\">Hermit</option>\n        <option value=\"knight\">Knight</option>\n        <option value=\"noble\">Noble</option>\n        <option value=\"outlander\">Outlander</option>\n        <option value=\"pirate\">Pirate</option>\n        <option value=\"sage\">Sage</option>\n        <option value=\"sailor\">Sailor</option>\n        <option value=\"soldier\">Soldier</option>\n        <option value=\"spy\">Spy</option>\n        <option value=\"urchin\">Urchin</option>\n      </select>\n\n      <label>\n        What is your character's max HP?\n      </label>\n      <input\n        name=\"maxHP\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.maxHP}\n        min={1}\n        max={99}\n        required\n      />\n\n      <label>\n        Set your ability Scores (include racial adjustments)\n      </label>\n      <p>Strength</p>\n      <input\n        name=\"str\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.str}\n        min={1}\n        max={20}\n        required\n      ></input>\n      <p>Dexterity</p>\n      <input\n        name=\"dex\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.dex}\n        min={1}\n        max={20}\n        required\n      ></input>\n      <p>Constitution</p>\n      <input\n        name=\"con\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.con}\n        min={1}\n        max={20}\n        required\n      ></input>\n      <p>Intelligence</p>\n      <input\n        name=\"int\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.int}\n        min={1}\n        max={20}\n        required\n      ></input>\n      <p>Wisdom</p>\n      <input\n        name=\"wis\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.wis}\n        min={1}\n        max={20}\n        required\n      ></input>\n      <p>Charisma</p>\n      <input\n        name=\"cha\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.cha}\n        min={1}\n        max={20}\n        required\n      ></input>\n\n      <label>What is your proficiency bonus?</label>\n      <input\n        name=\"proficiencyBonus\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.proficiencyBonus}\n        min={0}\n        max={99}\n      ></input>\n\n      <label>What is your armor bonus (No armor = 10)</label>\n      <input\n        name=\"armor\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.armor}\n        min={10}\n        max={99}\n      ></input>\n\n      <label>What is your shield bonus</label>\n      <input\n        name=\"shield\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.shield}\n        min={0}\n        max={99}\n      ></input>\n\n      <label>What is your max dexterity for your armor (0 if no maximum dexterity)?</label>\n      <input\n        name=\"maximumDexterity\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.maximumDexterity}\n        min={0}\n        max={99}\n      ></input>\n\n      <label>Do you have any miscellaneous bonuses to your armor class?</label>\n      <input\n        name=\"acMiscBonus\"\n        type=\"number\"\n        onChange={handleChange}\n        value={values.acMiscBonus}\n        min={0}\n        max={99}\n      ></input>\n\n      <button className='border border-black m-2'\n        type=\"submit\"\n      >\n        Create character\n      </button>\n    </form>\n  )\n}\n\nexport default SimpleBuild;","import React from 'react';\nimport SimpleBuild from './characterForms/SimpleBuild';\n\nconst CreateCharacter = props => {\n\n  let state = props.state;\n  const setState = props.setState;\n\n  return(\n    <React.Fragment>\n      <SimpleBuild state={state} setState={setState} />\n    <button className='border border-black m-2'\n      onClick={()=> setState(!state)}\n    >\n      Choose a Character\n    </button>\n    </React.Fragment>\n  )\n}\n\nexport default CreateCharacter;","import React from 'react';\nimport { abilityBonusCalc, formatString, calcDex } from '../../utils/helpers';\n\nconst CharacterCard = props => {\n\n  const character = props.character;\n\n  return (\n    <div className='flex flex-col justufy-center m-2 p-2 border border-black text-2xl space-y-2'>\n      <div className='flex justify-around items-center space-x-4'>\n        <h1>{character.name}</h1>\n        {character.subrace === \"\" ?\n          <p>{formatString(character.race)}</p>\n          :\n          <p>{formatString(character.subrace)}</p>\n        }\n        <p>{formatString(character.class)} {character.level}</p>\n      </div>\n      <div className='flex justify-center space-x-4'>\n        <p>HP: {parseInt(character.currentHP)}</p>\n        <p>/ {character.maxHP}</p>\n      </div>\n      <div className='flex justify-around space-x-4'>\n        <p>AC: {character.armor + character.shield + calcDex(abilityBonusCalc(character.dex), character.maximumDexterity) + character.acMiscBonus}</p>\n        <p>Initiative: {abilityBonusCalc(character.dex)}</p>\n        <p>Perception: {\n          character.skills.perception.trained === true ?\n            10 + character.proficiencyBonus + abilityBonusCalc(character.wis)\n            :\n            10 + abilityBonusCalc(character.wis)\n        }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterCard;","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from '../../utils/UserContext';\nimport { abilityBonusCalc, formatString, calcDex } from '../../utils/helpers';\nimport API from '../../utils/API';\n\nconst UserCard = props => {\n\n  const socket = props.socket\n\n  const { userCharacter } = useContext(UserContext);\n\n\n  const [hpState, sethpState] = useState(userCharacter.currentHP)\n\n  const name = userCharacter.name;\n\n  const handleHP = e => {\n    sethpState(e.target.value);\n  };\n\n  return (\n    <div className='flex flex-col justufy-center m-2 p-2 border border-black text-2xl space-y-2'>\n      <div className='flex justify-around items-center space-x-4'>\n        <h1>{userCharacter.name}</h1>\n        {userCharacter.subrace === \"\" ?\n          <p>{formatString(userCharacter.race)}</p>\n          :\n          <p>{formatString(userCharacter.subrace)}</p>\n        }\n        <p>{formatString(userCharacter.class)} {userCharacter.level}</p>\n      </div>\n      <div className='flex justify-center space-x-4'>\n        <p>HP: </p>\n        <input className='w-16'\n          type=\"number\"\n          size=\"3\"\n          max={999}\n          value={hpState}\n          onChange={handleHP}\n        >\n        </input>\n        <p>/ {userCharacter.maxHP}</p>\n        <button className='border border-black ml-2 px-1'\n          onClick={() => {\n            socket.emit('update-hp', { hpState, name });\n            API.updateCharacterById(userCharacter._id, {currentHP: hpState});\n          }}>\n          Set HP\n        </button>\n      </div>\n      <div className='flex justify-around space-x-4'>\n        <p>AC: {parseInt(userCharacter.armor) + parseInt(userCharacter.shield) + parseInt(calcDex(abilityBonusCalc(userCharacter.dex), userCharacter.maximumDexterity)) + parseInt(userCharacter.acMiscBonus)}</p>\n        <p>Initiative: {abilityBonusCalc(userCharacter.dex)}</p>\n        <p>Perception: {\n          userCharacter.skills.perception.trained === true ?\n            10 + parseInt(userCharacter.proficiencyBonus) + parseInt(abilityBonusCalc(userCharacter.wis))\n            :\n            10 + parseInt(abilityBonusCalc(userCharacter.wis))\n        }</p>\n      </div>\n    </div>\n  )\n}\n\nexport default UserCard;","import React, { useContext, useState, useEffect } from 'react';\nimport UserContext from '../utils/UserContext';\nimport CharacterCard from './characterViews/CharacterCard';\nimport UserCard from './characterViews/UserCard';\n\nconst CharacterPool = props => {\n\n  const socket = props.socket;\n\n  const { userCharacter } = useContext(UserContext);\n\n  const [activeCharacters, setActiveCharacters] = useState([]);\n\n  useEffect(() => {\n    socket.on('update-user-characters', data => {\n      // Updates player array from backend array\n      setActiveCharacters(data);\n    })\n  }, [])\n\n  return (\n    <div className='flex flex-col items-center'>\n      {userCharacter.name === \"\" ?\n        null\n        :\n        userCharacter.name === 'gm' ?\n          null\n          :\n          <UserCard socket={socket} />\n      }\n      {activeCharacters.map(char => (\n        char.name === userCharacter.name ?\n          null\n          :\n          <CharacterCard character={char} key={char._id} />\n      ))}\n\n\n    </div>\n  )\n}\n\nexport default CharacterPool;","import React, { useState, useContext } from 'react';\nimport UserContext from '../../utils/UserContext';\n\nconst Navbar = props => {\n\n  return (\n    <nav className=\"px-4 flex items-center flex-grow-0 flex-shrink-0 justify-between h-16 w-full bg-black text-white text-3xl md:text-2xl shadow-lg\">\n    </nav>\n  )\n}\n\nexport default Navbar;","import React, { useContext } from 'react';\nimport { abilityBonusCalc, formatString, calcDex } from '../../utils/helpers';\nimport useForm from '../../utils/useForm';\nimport { SubraceSwitch } from '../../utils/switchHelpers';\nimport API from '../../utils/API';\nimport UserContext from '../../utils/UserContext';\n\nconst CharacterEdit = props => {\n\n  const socket = props.socket;\n\n  const { userCharacter } = useContext(UserContext);\n\n  const stringIntConvert = obj => {\n    Object.entries(obj).map(item => {\n      if ((item[1] >>> 0 === parseFloat(item)) === true) item = parseInt(item[1]);\n      console.log(`Values: ${item[0]}: ${item[1]} is a ${typeof item[1]}`)\n    })\n  }\n\n  const updateChar = () => {\n    stringIntConvert(values)\n    setTimeout(() => socket.emit('update-character', values), 1000)\n    setTimeout(() => API.updateCharacterById(values._id, values), 1000)\n\n  }\n\n  const { values, handleChange, handleSubmit } = useForm(userCharacter, updateChar)\n\n  const abilityBonus = {\n    str: abilityBonusCalc(values.str),\n    dex: abilityBonusCalc(values.dex),\n    con: abilityBonusCalc(values.con),\n    int: abilityBonusCalc(values.int),\n    wis: abilityBonusCalc(values.wis),\n    cha: abilityBonusCalc(values.cha)\n  }\n\n  return (\n    <form className='flex flex-col'\n      onSubmit={handleSubmit}\n    >\n      <p className='self-center text-2xl'>{values.name}</p>\n      <div className='flex justify-evenly border-b border-black'>\n\n        <div className='flex flex-col'>\n          <div className='flex justify-center border-b border-black'>\n            <select\n              name=\"class\"\n              onChange={handleChange}\n              value={values.class}\n              required\n            >\n              <option value=\"barbarian\">Barbarian</option>\n              <option value=\"bard\">Bard</option>\n              <option value=\"cleric\">Cleric</option>\n              <option value=\"druid\">Druid</option>\n              <option value=\"fighter\">Fighter</option>\n              <option value=\"monk\">Monk</option>\n              <option value=\"paladin\">Paladin</option>\n              <option value=\"ranger\">Ranger</option>\n              <option value=\"rogue\">Rogue</option>\n              <option value=\"sorcerer\">Sorcerer</option>\n              <option value=\"warlock\">Warlock</option>\n              <option value=\"wizard\">Wizard</option>\n            </select>\n            <input\n              name=\"level\"\n              type=\"number\"\n              onChange={handleChange}\n              value={values.level}\n              min={1}\n              max={20}\n              required\n            />\n          </div>\n          <label className='self-center'>Class</label>\n        </div>\n\n        <div className='flex flex-col'>\n          <select className='border-b border-black'\n            name=\"background\"\n            onChange={handleChange}\n            value={values.background}\n            required\n          >\n            <option value=\"acolyte\">Acolyte</option>\n            <option value=\"charlatan\">Charlatan</option>\n            <option value=\"criminal\">Criminal</option>\n            <option value=\"entertainer\">Entertainer</option>\n            <option value=\"folkHero\">Folk Hero</option>\n            <option value=\"guildArtisan\">Guild Artisan</option>\n            <option value=\"guildMerchant\">Guild Merchant</option>\n            <option value=\"hermit\">Hermit</option>\n            <option value=\"knight\">Knight</option>\n            <option value=\"noble\">Noble</option>\n            <option value=\"outlander\">Outlander</option>\n            <option value=\"pirate\">Pirate</option>\n            <option value=\"sage\">Sage</option>\n            <option value=\"sailor\">Sailor</option>\n            <option value=\"soldier\">Soldier</option>\n            <option value=\"spy\">Spy</option>\n            <option value=\"urchin\">Urchin</option>\n          </select>\n          <label className='self-center'>Background</label>\n        </div>\n\n        <div className='flex flex-col'>\n          <div className='flex border-b border-black'>\n            <select\n              name=\"race\"\n              onChange={handleChange}\n              value={values.race}\n              required\n            >\n              <option value=\"dragonborn\">Dragonborn</option>\n              <option value=\"dwarf\">Dwarf</option>\n              <option value=\"elf\">Elf</option>\n              <option value=\"gnome\">Gnome</option>\n              <option value=\"half-elf\">Half-Elf</option>\n              <option value=\"halfling\">Halfling</option>\n              <option value=\"half-orc\">Half-Orc</option>\n              <option value=\"human\">Human</option>\n              <option value=\"tiefling\">Tiefling</option>\n            </select>\n            <select\n              name=\"subrace\"\n              onChange={handleChange}\n              value={values.subrace}\n              required\n            >\n              {SubraceSwitch(values.race).map((subrace, i) => (\n                <option key={i} value={subrace}>{formatString(subrace)}</option>\n              ))}\n            </select>\n          </div>\n          <label className='self-center'>Race</label>\n        </div>\n\n        <div className='flex flex-col'>\n          <select className='border-b border-black'\n            name=\"alignment\"\n            onChange={handleChange}\n            value={values.alignment}\n            required\n          >\n            <option value=\"lg\">Lawful Good</option>\n            <option value=\"ng\">Neutral Good</option>\n            <option value=\"cg\">Chaotic Good</option>\n            <option value=\"ln\">Lawfule Neutral</option>\n            <option value=\"n\">Neutral</option>\n            <option value=\"cn\">Chaotic Neutral</option>\n            <option value=\"le\">Lawful Evil</option>\n            <option value=\"ne\">Neutral Evil</option>\n            <option value=\"ce\">Chaotic Evil</option>\n          </select>\n          <label className='self-center'>Alignment</label>\n        </div>\n      </div>\n\n      <div className=\"flex\">\n        <div className='flex flex-col items-center border border-black'>\n          <p>Strength</p>\n          <input className='text-2xl pl-12'\n            name=\"str\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.str}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.str)}</p>\n\n          <p>Dexterity</p>\n          <input className='text-2xl pl-12'\n            name=\"dex\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.dex}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.dex)}</p>\n\n          <p>Constitution</p>\n          <input className='text-2xl pl-12'\n            name=\"con\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.con}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.con)}</p>\n\n          <p>Intelligence</p>\n          <input className='text-2xl pl-12'\n            name=\"int\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.int}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.int)}</p>\n\n          <p>Wisdom</p>\n          <input className='text-2xl pl-12'\n            name=\"wis\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.wis}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.wis)}</p>\n\n          <p>Charisma</p>\n          <input className='text-2xl pl-12'\n            name=\"cha\"\n            type=\"number\"\n            onChange={handleChange}\n            value={values.cha}\n            min={0}\n            max={99}\n            required\n          >\n          </input>\n          <p>{abilityBonusCalc(values.cha)}</p>\n\n        </div>\n        <div className='flex flex-col mx-2 border border-black p-1'>\n          <div className='flex text-sm'>\n            <input\n              name=\"proficiencyBonus\"\n              type=\"number\"\n              onChange={handleChange}\n              value={values.proficiencyBonus}\n              min={0}\n              max={99}\n              required\n            />\n            <label>Proficiency Bonus</label>\n          </div>\n          <div className='flex flex-col text-sm'>\n            <p>Saving Throws</p>\n            {Object.entries(values.saves).map((save, i) => (\n              save[1] === false ? (\n                <div className='flex items-center space-x-2' key={i + 300}>\n                  <input\n                    key={i + 400}\n                    name={`${save[0]}Save`}\n                    type=\"checkbox\"\n                    onClick={() => save[1] = !save[1]}\n                    value={save[1]}\n                    defaultChecked={false}\n                  />\n                  <p>{Object.entries(abilityBonus).map(ability => (\n                    ability[0] === save[0] ?\n                      ability[1]\n                      :\n                      null\n                  ))}</p>\n                  <label key={i + 500}>{`${formatString(save[0])}`}</label>\n                </div>\n              ) : (\n                  <div className='flex items-center space-x-2' key={i + 300}>\n                    <input\n                      key={i + 400}\n                      name={`${save[0]}Save`}\n                      type=\"checkbox\"\n                      onChange={() => save[1] = !save[1]}\n                      value={save[1]}\n                      defaultChecked={true}\n                    />\n                    <p>{Object.entries(abilityBonus).map(ability => (\n                      ability[0] === save[0] ?\n                        ability[1] + values.proficiencyBonus\n                        :\n                        null\n                    ))}</p>\n                    <label key={i + 500}>{`${formatString(save[0])}`}</label>\n                  </div>\n                )\n            ))}\n          </div>\n          <div className='flex flex-col text-sm'>\n            <p>Skill Proficiencies</p>\n            {Object.entries(values.skills).map((skill, i) => (\n              skill[1].trained === false ? (\n                <div className='flex items-center space-x-2' key={i + 200}>\n                  <input\n                    key={i}\n                    name=\"skills\"\n                    type=\"checkbox\"\n                    onChange={() => skill[1].trained = !skill[1].trained}\n                    value={skill[1].trained}\n                    defaultChecked={false}\n                  />\n                  <p>{Object.entries(abilityBonus).map(ability => (\n                    ability[0] === skill[1].ability ?\n                      ability[1]\n                      :\n                      null\n                  ))}</p>\n                  <label key={i + 100}>{`${formatString(skill[0])} (${formatString(skill[1].ability)})`}</label>\n                </div>\n              ) : (\n                  <div className='flex items-center space-x-2' key={i + 200}>\n                    <input\n                      key={i}\n                      name=\"skills\"\n                      type=\"checkbox\"\n                      onChange={() => skill[1].trained = !skill[1].trained}\n                      value={skill[1].trained}\n                      defaultChecked={true}\n                    />\n                    <p>{Object.entries(abilityBonus).map(ability => (\n                      ability[0] === skill[1].ability ?\n                        parseInt(ability[1]) + parseInt(values.proficiencyBonus)\n                        :\n                        null\n                    ))}</p>\n                    <label key={i + 100}>{`${formatString(skill[0])} (${formatString(skill[1].ability)})`}</label>\n                  </div>\n                )\n            ))}\n          </div>\n        </div>\n        <div className='flex flex-col mx-2 border border-black'>\n          <div className='flex justify-between'>\n            <div className='flex flex-col items-center p-1 flex-1 border border-black'>\n              <p>{parseInt(values.armor) + parseInt(values.shield) + parseInt(calcDex(abilityBonusCalc(values.dex), values.maximumDexterity)) + parseInt(values.acMiscBonus)}</p>\n              <p className='text-sm'>Armor Class</p>\n            </div>\n            <div className='flex flex-col items-center p-1 flex-1 border border-black'>\n              <p>{abilityBonusCalc(values.dex)}</p>\n              <p className='text-sm'>Initiative</p>\n            </div>\n            <div className='flex flex-col items-center p-1 flex-1 border border-black'>\n              <input\n                name=\"speed\"\n                type=\"number\"\n                step={5}\n                onChange={handleChange}\n                value={values.speed}\n                min={0}\n                max={99}\n                required\n              ></input>\n              <p className='text-sm'>Speed</p>\n            </div>\n          </div>\n\n          <div className='border border-black'>\n            <div className='flex ml-2'>\n              <input\n                name=\"armor\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.armor}\n                min={10}\n                max={99}\n                required\n              />\n              <label>Armor Rating</label>\n            </div>\n            <div className='flex ml-2'>\n              <input\n                name=\"shield\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.shield}\n                min={0}\n                max={99}\n                required\n              />\n              <label>Shield Rating</label>\n            </div>\n            <div className='flex ml-2'>\n\n              <input\n                name=\"maximumDexterity\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.maximumDexterity}\n                min={-1}\n                max={99}\n                required\n              />\n              <label>Maximum Dexterity</label>\n            </div>\n            <div className='flex ml-2'>\n              <input\n                name=\"acMiscBonus\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.acMiscBonus}\n                min={0}\n                max={99}\n                required\n              />\n              <label>Misc Armor Bonus</label>\n            </div>\n          </div>\n          <div className='flex flex-col items-center'>\n            <p className='text-4xl'>{parseInt(values.currentHP) + parseInt(values.tempHP)}</p>\n            <p className='text-lg'>HP</p>\n          </div>\n          <div className='flex flex-col border border-black'>\n            <div className='flex'>\n              <input\n                name=\"maxHP\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.maxHP}\n                min={1}\n                max={999}\n                required\n              />\n              <label>Max Hit Points</label>\n            </div>\n            <div className='flex'>\n              <input\n                name=\"currentHP\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.currentHP}\n                min={0}\n                max={values.maxHP}\n                required\n              />\n              <label>Current Hit Points</label>\n            </div>\n            <div className='flex'>\n              <input\n                name=\"tempHP\"\n                type=\"number\"\n                onChange={handleChange}\n                value={values.tempHP}\n                min={0}\n                max={999}\n                required\n              />\n              <label>Temp Hit Points</label>\n            </div>\n          </div>\n          <button className='border border-black bg-green-300 m-2'\n            type=\"submit\"\n          >\n            Update {userCharacter.name}\n          </button>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default CharacterEdit;","import React, { useState, useEffect } from \"react\";\nimport UserContext from \"./utils/UserContext\";\nimport io from 'socket.io-client';\nimport API from './utils/API';\nimport CreateCharacter from \"./components/CreateCharacter\";\nimport CharacterPool from \"./components/CharacterPool\";\nimport Navbar from \"./components/nav/Navbar\";\nimport CharacterEdit from \"./components/characterViews/CharacterEdit\";\n\nconst socket = io();\n\nconst App = () => {\n\n  const [createCharacterState, setCreateCharacterState] = useState(false)\n\n  // Sets character Array for users to select from\n  const [characters, setCharacters] = useState([]);\n\n  // Handles character selection for user\n  const [characterSelect, setCharacterSelect] = useState(\"\");\n  // Handles Character selection value change\n  const handleCharacterSelection = e => {\n    setCharacterSelect(e.target.value)\n  };\n  // Takes character select state and grabs the character info from an api\n  const selectCharacter = e => {\n    e.preventDefault();\n    API.getCharacterByName(characterSelect)\n      .then(char => {\n        const character = char.data[0];\n        setUserCharacter(character);\n        socket.emit('add-user-character', character);\n      })\n      .catch(err => console.log(err))\n  }\n\n  const gmLogin = () => {\n    setUserCharacter({ name: 'gm' })\n  }\n\n  // State for users selected character\n  const [userCharacter, setUserCharacter] = useState(\n    {\n      name: \"\",\n      race: \"\",\n      subrace: \"\",\n      class: \"\",\n      level: \"\",\n      currentHP: \"\",\n      maxHP: \"\",\n      ACarmor: 10,\n      ACshield: 0,\n      ACmaxDex: 0,\n      ACmiscBonus: 0,\n    }\n  );\n\n  // Gets all created characters on page load\n  useEffect(() => {\n    API.getAllCharacters()\n      .then(characters => {\n        console.log(characters.data);\n        const charactersArr = characters.data;\n        setCharacters(charactersArr)\n      })\n  }, [])\n\n  useEffect(() => {\n    socket.on('update-current-character', data => {\n      setUserCharacter(data);\n    })\n  }, [socket])\n\n  return (\n    <UserContext.Provider value={{ userCharacter }}>\n      <Navbar socket={socket} />\n      <div className='flex justify-around'>\n        <div className='flex flex-col flex-1'>\n          {userCharacter.name === \"\" ?\n            createCharacterState === false ?\n              <div className='flex flex-col items-center'>\n                <form className='text-2xl flex flex-col items-center'\n                  onSubmit={selectCharacter}\n                >\n                  <p>Select a character</p>\n                  <select className='border border-black'\n                    value={characterSelect}\n                    onChange={handleCharacterSelection}\n                    id=\"name\"\n                    size=\"10\"\n                  >\n                    {characters.map(char => (\n                      <option\n                        key={char._id}\n                        value={char.name}\n                      >\n                        {char.name}\n                      </option>\n                    ))}\n                  </select>\n                  <button className='border border-black m-2'\n                    type=\"submit\"\n                  >\n                    Confirm\n                </button>\n                </form>\n                <button className='border border-black m-2 px-2'\n                  onClick={gmLogin}\n                >\n                  GM\n                </button>\n                <button className='border border-black m-2 px-2'\n                  onClick={() => setCreateCharacterState(!createCharacterState)}\n                >\n                  Create a Character\n              </button>\n              </div>\n              :\n              <CreateCharacter\n                state={createCharacterState}\n                setState={setCreateCharacterState}\n              />\n            :\n            userCharacter.name === 'gm' ?\n              null\n              :\n              <CharacterEdit\n                char={userCharacter}\n                socket={socket}\n              />\n          }\n        </div>\n        <div className='flex flex-col flex-1'>\n          <CharacterPool socket={socket} />\n        </div>\n      </div>\n\n    </UserContext.Provider>\n  )\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}